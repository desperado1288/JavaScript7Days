Solution 1:
public void wiggleSort(int[] nums){
    if(nums == null || nums.length == 0)    return;
    int value = nums[0], n = nums.length;
    boolean flag = true;
    for(int i = 1; i < n; i++){
        if(flag && value <= nums[i] || !flag && value >= nums[i]){
            nums[i-1] = value;
            value = nums[i];
        }
        else    nums[i-1] = nums[i];
        flag = !flag;
    }
    nums[n-1] = value;
}


Solution 2:
public void wiggleSort(int[] nums){
    if(nums == null || nums.length == 0)    return;
    int n = nums.length;
    boolean flag = true;
    for(int j = 1; j < n; j++){
        if(flag && nums[j-1] > nums[j] || !flag && nums[j-1] < nums[j]){
            int temp = nums[j-1];
            nums[j-1] = nums[j];
            nums[j] = temp;
        }
        flag = !flag;
    }
}

Solution 3:
public void wiggleSort(int[] nums){
    if(nums == null)    return;
    int n = nums.length;
    for(int j = 1; j < n; j++)  swap(nums, j - (((j & 1) == 1 ^ nums[j-1] < nums[j]) ? 1 : 0), j);
}
public void swap(int[] nums, int i, int j){
    int temp = nums[i];
    nums[i] = nums[j];
    nums[j] = temp;
}
