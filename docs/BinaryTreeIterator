public class BSTIterator {
    private Stack<TreeNode> st = new Stack<>();
    public BSTIterator(TreeNode root) {
        while(root != null){
            st.push(root);
            root = root.left;
        }
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !st.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
        //if(!hasNext())    return -1;
        TreeNode cur = st.pop();
        if(cur.right != null){
            TreeNode walk = cur.right;
            while(walk != null){
                st.push(walk);
                walk = walk.left;
            }
        }
        return cur.val;
    }
}
